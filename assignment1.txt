Q1. Explore the following commands with various options, refer man pages for 
    further help 

a)	date :The date command can be used to print (or even set) the system date and time.

$ date
Tue Sep  8 17:33:07 IST 2020

$ date +%a
Thu

$ date +%A
Thursday

$ date +%b
Sep

$ date +%B
September

$ date +%y
20

$date +%Y
2020

$ date +%c
Thu Sep 10 15:16:32 2020

$date +%C
20

$ date +%d
10

$ date +%D
09/10/20

$ date +%T
15:18:36

date +%d/%B/%Y
10/September/2020
---------------------------------------------------------------------------------------------------------------------------------------------------------------
b)cal  : The cal  commands display a calendar in the output.
$ cal

   September 2020
Su Mo Tu We Th Fr Sa
       1  2  3  4  5
 6  7  8  9 10 11 12
13 14 15 16 17 18 19
20 21 22 23 24 25 26
27 28 29 30

$ cal -m1 2020

    January 2020
Su Mo Tu We Th Fr Sa
          1  2  3  4
 5  6  7  8  9 10 11
12 13 14 15 16 17 18
19 20 21 22 23 24 25
26 27 28 29 30 31

$ cal 01 2020
    January 2020
Su Mo Tu We Th Fr Sa
          1  2  3  4
 5  6  7  8  9 10 11
12 13 14 15 16 17 18
19 20 21 22 23 24 25
26 27 28 29 30 31

---------------------------------------------------------------------------------------------------------------------------------------------------------------
c)bc: bc command is used for command line calculator.  we can do basic mathematical calculations. 
syntax bc [ -hlwsqv ] [long-options] [ file ... ] 

$ echo "20+1" | bc
21

$ echo "var=23;var++" | bc
23

$ echo "10==1" |bc
0

$ echo "! 0" | bc
1

$ echo "5 < 10" | bc 
1

$ echo "5 > 10" | bc 
0

$ echo "1 && 7" | bc
1

$ echo "1 || 7" | bc
1

$ echo "! 0" | bc
1

---------------------------------------------------------------------------------------------------------------------------------------------------------------

d) echo :echo command in linux is used to display line of text/string that are passed as an argument .
syntax: echo [option] [string]
echo [string]

$ echo "welcome to cdac-juhu-2020"
welcome to cdac-juhu-2020

$ echo -e "hello \nworld"     \v : this option is used to create vertical tab spaces.
hello
world

$ echo -e "hello \tworld"     \t : this option is used to create horizontal tab spaces.
hello   world

$ echo *                      echo * : this command will print all files/folders, similar to ls command .
f1.txt test1   
 
---------------------------------------------------------------------------------------------------------------------------------------------------------------
e) who   
who command is used to find out the following information :
1. Time of last system boot
2. Current run level of the system
3. List of logged in users and more.
Syntax : $who [options] [filename] 
 
$ who -m -H               To display host name and user associated with standard input such as keyboard

NAME     LINE         TIME             COMMENT

~$ who -q -H               To count number of users logged on to system
# users=0
---------------------------------------------------------------------------------------------------------------------------------------------------------------
f) whoami   To display system’s username
rtron@LAPTOP-BC8FINDB:~$ whoami
rtron
---------------------------------------------------------------------------------------------------------------------------------------------------------------
g) logname Print the name of the current user.

$ logname
logname: no login name
---------------------------------------------------------------------------------------------------------------------------------------------------------------
g) uname The command ‘uname‘ displays the information about the system.
$ uname
Linux

$ uname -a       It prints all the system information in the following order:
Kernel name, network node hostname, kernel release date, kernel version, machine hardware name, hardware platform, operating system
Linux LAPTOP-BC8FINDB 4.4.0-18362-Microsoft #836-Microsoft Mon May 05 16:04:00 PST 2020 x86_64 x86_64 x86_64 GNU/Linux

$ uname -s       It prints the kernel name.
Linux

$ uname -n       It prints the hostname of the network node(current computer).
LAPTOP-BC8FINDB 

$ uname -r       It prints the kernel release date.
4.4.0-18362-Microsoft

$ uname -v      It prints the version of the current kernel.
#836-Microsoft Mon May 05 16:04:00 PST 2020

$ uname -m     It prints the machine hardware name.
x86_64

$ uname -p     It prints the type of the processor.
x86_64

$ uname -i     It prints the platform of the hardware.
x86_64

$ uname -o    It prints the name of the operating system.
GNU/Linux
---------------------------------------------------------------------------------------------------------------------------------------------------------------
h)seq   seq command in Linux is used to generate numbers from FIRST to LAST in steps of INCREMENT. 
It is a very useful command where we had to generate list of numbers in while, for, until loop.
syntax :
seq [OPTION]... LAST
  or
seq [OPTION]... FIRST LAST
  or
seq [OPTION]... FIRST INCREMENT LAST

$ seq  50 2 70
50
52
54
56
58
60
62
64
66
68
70
---------------------------------------------------------------------------------------------------------------------------------------------------------------
i) clear  clear command used to clear the terminal screen.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Q2.	A) Create three directory a b and c and create a.txt,b.txt and c.txt in each directory respectively and then copy c directory into the a.

Q2.	A) Create three directory a b and c and create a.txt,b.txt and c.txt in each directory respectively and then copy c directory into the a.

mkdir a b c

cd a
touch a.txt
cd ..

cd b
touch b.txt
cd ..

cd c
touch c.txt
cd ..

cp -r c a	

B)Move Directory b to c.
mv b c
	
C)Create alias of ls -lh command to your name.

alias aarti='ls -lh'
	
D)Change Directory name a to cdac.
mv a cdac
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Q3. A) Create five files file1.txt , file2.txt ,file3.txt file4.txt and
    file5.txt with some text inside it. Search for 's' character
    inside all the files using grep command.
    Also Use cat to view all file content together.

cat file1.txt
cat file2.txt
cat file3.txt
cat file4.txt
cat file5.txt

grep 's' file[1-5].txt

cat file?.txt

	
B)Create file.txt using cat and edit that using nano editor.

nano file.txt
cat file.txt
	
c)Create 5 empty files using touch command

$ touch demo1.txt demo2.txt  demo3.txt demo4.txt demo5.txt
	
D)Remove previously created directory a , b and c.
rm -rf a b c
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Q4. Create a file with some content using vi editor

vi testfile
       i to insert text 
      escape to leave insert
      :wq to exit

	a) Display the file using cat command
          $ cat testfile
          WELCOME TO CDAC-JUHU-2020

	b) Display line numbers along with content
           $ cat -n testfile
           1  WELCOME TO CDAC-JUHU-2020

	c) Display the file in reverse order using tac
            $ tac testfile  

	d) Combine multiple files using cat command
           $ cat file1.txt file2.txt file3.txt

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Q5. Create Random some files and sub directories.

	a) display files row wise, column wise, 1 per row
           $ column file.txt

           
	b) sort the files in ascending, descending order
           $ sort file.txt     //for ascending order
           $ sort -r file.txt  //for descending order

	c) Create some hidden files and sub directories and display them using “ls -a”
           $ mkdir .aa .bb .c.txt
           $ ls -a

	d) Change time stamp of some files and directories using touch command and display the files using ls -t ls -rt
            $ stat demo1.txt

            File: demo1.txt
            Size: 0               Blocks: 0          IO Block: 4096   regular empty file
            Device: 2h/2d   Inode: 3377699720669152  Links: 1
            Access: (0666/-rw-rw-rw-)  Uid: ( 1000/   rtron)   Gid: ( 1000/   rtron)
            Access: 2020-09-10 21:12:16.677185700 +0530
            Modify: 2020-09-10 21:12:16.677185700 +0530
            Change: 2020-09-10 21:12:16.677185700 +0530
            Birth: -

            $ touch -a demo1.txt
            
            $ stat demo1.txt

            $ ls -t
            testfile  file.txt  demo5.txt  demo4.txt  demo3.txt  demo2.txt  demo1.txt  file5.txt  file4.txt  file3.txt  file2.txt  file1.txt  c.txt  cdac  test1  f1.txt

           $ ls -rt
           f1.txt  test1  cdac  c.txt  file1.txt  file2.txt  file3.txt  file4.txt  file5.txt  demo1.txt  demo2.txt  demo3.txt  demo4.txt  demo5.txt  file.txt  testfile


	e) Recursive display contents of your home directory.
           $ ls -r
	f) display all attributes of files and directories using ls -l
           $ ls -l
	g) display attributes of a directory using ls -ld
           $ ls -ld
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Q1. Create directory of your name and then create 4 files inside it named
	a.txt, b.txt, c.txt and d.sh. And change the directory permission to
	only user and also files permission to only user such that

$ mkdir aarti
$ touch a.txt b.txt c.txt d.sh
$ chmod u+rwx aarti


		a)user can read and write the file a.txt and b.txt
   
                  $ chmod -u+rw a.txt b.txt  (or) chmod -u-x a.txt b.txt    (or)     chmod u+rw- bar     

		b)user can write the file c.txt
                  $ chmod -u+w c.txt  (or) chmod -u-rx c.txt (or)


		c)user can exectuable the file d.sh. Make
			Contents of file d.sh:
			#/bin/sh
			ls -lh

                  $ chmod -u-rw d.sh   //chmod +x d.sh
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Q2. Change the permission of the previous directory to executable only.
	Analyze the output.
$chmod +x aarti
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Q3. Change the permission of the previous directory to read only.
	Analyze the output.

    $ chmod +r aarti (or) chmod -wx aarti
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Q4. Use echo to list the all files of your home directory.
    $ echo * 
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Q5. Use echo to list the all files of /etc/ directory
    $ 
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Q6. Use echo to list the all files of /etc/ directory with extension name .conf
    $find /etc -type f -name "*.conf"
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Q7. Use echo to append your name to a.txt
     $ echo 'aarti' >> a.txt

---------------------------------------------------------------------------------------------------------------------------------------------------------------

Note:Many operation might not work.Analyze them
1.	Create Three level nested directory a,b and c
a)Create at least one hidden file in each directory
b)Create at least one normal text file in each directory
c)Copy c into a
d)Copy file inside a into b

mkdir a
cd a
touch a.txt 
touch .hidden.txt
a.mkdir b

mkdir b
cd b
touch b.txt 
touch .hidden1.txt

b.mkdir c
touch c.txt 
touch .hidden2.txt
c. cp -r  c a
d.cp -r a/a.txt a/b
 cp -r a/c/ a/b
---------------------------------------------------------------------------------------------------------------------------------------------------------------
2.	Change the third level directory c permission to read only
---------------------------------------------------------------------------------------------------------------------------------------------------------------
3.	Try copying third level c directory to outside of a
---------------------------------------------------------------------------------------------------------------------------------------------------------------
4.	Create the directory  “data“ inside b
---------------------------------------------------------------------------------------------------------------------------------------------------------------
5.	Change the permission of b to read and write only
---------------------------------------------------------------------------------------------------------------------------------------------------------------
6.	Create directory “data2”  inside b
---------------------------------------------------------------------------------------------------------------------------------------------------------------
7.	Create data.txt file inside b
---------------------------------------------------------------------------------------------------------------------------------------------------------------
8.	Rename the second level directory c to copied_dir
---------------------------------------------------------------------------------------------------------------------------------------------------------------
9.	Change permission of copied_dir to only executable
---------------------------------------------------------------------------------------------------------------------------------------------------------------
10.	Try ls on copied_dir
---------------------------------------------------------------------------------------------------------------------------------------------------------------
11.	Try moving copied_dir to outside of a
---------------------------------------------------------------------------------------------------------------------------------------------------------------
12.	Try moving data directory outside of a
---------------------------------------------------------------------------------------------------------------------------------------------------------------
13.	Now change the owner of the directory a to root
---------------------------------------------------------------------------------------------------------------------------------------------------------------
14.	Change permission of a to read write and executable to only user
---------------------------------------------------------------------------------------------------------------------------------------------------------------
15.	Try creating directory sample inside a
---------------------------------------------------------------------------------------------------------------------------------------------------------------
16.	Create directory x outside a
---------------------------------------------------------------------------------------------------------------------------------------------------------------
17.	Try moving x inside a
         $ mv  x a
---------------------------------------------------------------------------------------------------------------------------------------------------------------
18.	Create directory movies
        $  mkdir movies
---------------------------------------------------------------------------------------------------------------------------------------------------------------
19.	Change group of movies to sudo
        
---------------------------------------------------------------------------------------------------------------------------------------------------------------
20.	Change group of movies to avahi
---------------------------------------------------------------------------------------------------------------------------------------------------------------
21.	Try changing permission after changing ownership to root
---------------------------------------------------------------------------------------------------------------------------------------------------------------
22.	Try Changing permission after changing group to sudo without sudo
---------------------------------------------------------------------------------------------------------------------------------------------------------------
23.	Try Changing owner and group both to root
---------------------------------------------------------------------------------------------------------------------------------------------------------------
24.	Try changinging permission
---------------------------------------------------------------------------------------------------------------------------------------------------------------
25.	Try deleting the file
---------------------------------------------------------------------------------------------------------------------------------------------------------------

	
	
